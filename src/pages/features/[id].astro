---
import MainLayout from '../../layouts/MainLayout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const featuresEntries = await getCollection('features');
  
  return featuresEntries.map(entry => ({
    params: { id: entry.id },
    props: { feature: entry }
  }));
}

const { feature } = Astro.props;
const { name, description, longDescription, status } = feature.data;
---

<MainLayout title={`${name} | HosDev Features`}>
  <div class="feature-container">
    <div class="feature-header">
      <h1>{name}</h1>
      <div class={`feature-status ${status}`}>
        {status === 'available' ? 'Available Now' : 'Coming Soon'}
      </div>
    </div>
    
    <p class="feature-description">{description}</p>
    
    <div class="feature-content">
      {longDescription && (
        <div set:html={longDescription.split('\n').map(para => `<p>${para}</p>`).join('')} />
      )}
    </div>
    
    <div class="feature-actions">
      {status === 'available' ? (
        <a href="/demo" class="btn">Request Demo</a>
      ) : (
        <a href="/updates" class="btn btn-outline">Get Updates</a>
      )}
      <a href="/features" class="back-link">‚Üê All Features</a>
    </div>
  </div>
</MainLayout>

<style>
  .feature-container {
    max-width: var(--width);
    margin: 0 auto;
    padding: 0 var(--space-sm);
  }
  
  .feature-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-md);
  }
  
  .feature-header h1 {
    margin: 0;
  }
  
  .feature-status {
    font-size: 0.85rem;
    padding: 0.4rem 0.8rem;
    border-radius: 20px;
    background-color: color-mix(in srgb, var(--text-color) 10%, transparent);
  }
  
  .feature-status.available {
    background-color: #4CAF5033;
    color: #4CAF50;
  }
  
  .feature-status.coming-soon {
    background-color: #ff990033;
    color: #ff9900;
  }
  
  .feature-description {
    font-size: 1.2rem;
    color: var(--sub-color);
    margin-bottom: var(--space-lg);
    line-height: 1.6;
  }
  
  .feature-content {
    margin-bottom: var(--space-lg);
  }
  
  .feature-content p {
    margin-bottom: var(--space-md);
    line-height: 1.6;
  }
  
  .feature-actions {
    display: flex;
    align-items: center;
    margin-top: var(--space-xl);
    gap: var(--space-md);
  }
  
  .back-link {
    color: var(--sub-color);
  }
  
  @media (max-width: 600px) {
    .feature-header {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-sm);
    }
    
    .feature-actions {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-sm);
    }
    
    .btn {
      width: 100%;
      text-align: center;
    }
  }
</style>