---
import MainLayout from '../../layouts/MainLayout.astro';
import { getCollection } from 'astro:content';

// Get all blog posts sorted by date
const posts = await getCollection('blog');
const sortedPosts = posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Get all projects to show project info for each post
const projects = await getCollection('projects');
const projectMap = new Map();
projects.forEach(project => {
  projectMap.set(project.data.slug, project.data);
});
---

<MainLayout title="Posts | Hospitality.dev">
  <main>
    <h1>All Posts</h1>
    <p class="sub-description">Thoughts, ideas, and insights on technology and hospitality.</p>
    
    {sortedPosts.length > 0 ? (
      <ul class="blog-posts">
        {sortedPosts.map((post) => {
          const formattedDate = new Date(post.data.pubDate).toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'short',
            day: 'numeric',
          });
          
          return (
            <li>
              <a href={`/${post.slug}`} class="post-link">
                <div class="post-wrapper">
                  <div class="post-header">
                    <span class="post-title">{post.data.title}</span>
                    <time datetime={post.data.pubDate.toString()}>{formattedDate}</time>
                  </div>
                  {post.data.project && projectMap.get(post.data.project) && (
                    <div class="post-project">
                      <a href={`/${post.data.project}`} onclick={(e) => e.stopPropagation()}>
                        {projectMap.get(post.data.project).name}
                      </a>
                    </div>
                  )}
                </div>
              </a>
            </li>
          );
        })}
      </ul>
    ) : (
      <div class="empty-state">
        <p>No posts yet. Check back soon!</p>
      </div>
    )}
  </main>
</MainLayout>

<style>
  main {
    margin: calc(1.75 * var(--space-md)) 0;
  }
  
  h1 {
    font-weight: 550;
    letter-spacing: -.5px;
    background: linear-gradient(to bottom, var(--text-color), var(--sub-color));
    -webkit-background-clip: text;
    color: var(--tx-clip);
    text-shadow: var(--tx-shadow);
    margin-bottom: var(--space-sm);
  }
  
  .sub-description {
    color: var(--sub-color);
    margin-bottom: var(--space-lg);
    font-size: 1rem;
  }
  
  .empty-state {
    text-align: center;
    padding: var(--spacing-lg);
    font-style: italic;
    color: var(--sub-color);
    margin-top: var(--space-lg);
  }
  
  .post-wrapper {
    display: flex;
    flex-direction: column;
    width: 100%;
  }
  
  .post-header {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
    width: 100%;
  }
  
  .post-title {
    font-weight: normal;
    line-height: 1.3;
    padding-right: 10px;
  }
  
  .post-project {
    font-size: 75%;
    margin-top: 2px;
  }
  
  .post-project a {
    color: var(--sub-color);
    text-decoration: none;
  }
  
  .post-project a:hover {
    text-decoration: underline;
  }
  
  /* Override the default blog-posts list styles */
  .post-link {
    display: block;
    text-decoration: none;
    color: currentColor;
    width: 100%;
  }
  
  ul.blog-posts li time {
    flex-shrink: 0;
    white-space: nowrap;
    color: var(--sub-color);
    font-size: 90%;
  }
  
  /* Responsive adjustments */
  @media (max-width: 480px) {
    .post-header {
      flex-direction: column;
      align-items: flex-start;
    }
    
    ul.blog-posts li time {
      margin-top: 4px;
      font-size: 80%;
    }
  }
</style>